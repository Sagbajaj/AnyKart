{"ast":null,"code":"import _classCallCheck from\"C:/Users/ombal/Desktop/project/anykart/AnyKart/app/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";import _createClass from\"C:/Users/ombal/Desktop/project/anykart/AnyKart/app/node_modules/@babel/runtime/helpers/esm/createClass.js\";import axios from'axios';var USER_API_BASE_URL='http://localhost:7171/customers';var ApiCustomerService=/*#__PURE__*/function(){function ApiCustomerService(){_classCallCheck(this,ApiCustomerService);}_createClass(ApiCustomerService,[{key:\"addUser\",value://user == customer\n//Create Account\n//return Successfully msg\nfunction addUser(user){return axios.post(USER_API_BASE_URL+'/signup/',user);}},{key:\"addSupplier\",value:function addSupplier(categoryName,user){return axios.put(USER_API_BASE_URL+'/signup/'+categoryName,user);}},{key:\"deleteSupplier\",value:function deleteSupplier(userId){return axios.delete(USER_API_BASE_URL+'/'+userId);}},{key:\"deleteDelBoy\",value:function deleteDelBoy(userId){return axios.delete(USER_API_BASE_URL+'/delBoy/'+userId);}//Edit Profile\n//return user object\n},{key:\"editUser\",value:function editUser(user){return axios.put(USER_API_BASE_URL+'/edit-profile/'+user.id,user);}//Change password\n//retrun successfully msg\n},{key:\"editUserPassword\",value:function editUserPassword(user_id,pwd){return axios.put(USER_API_BASE_URL+'/change_pwd/'+user_id+'/'+pwd);}//Authenticate user\n//return user object\n},{key:\"fetchUserByLoginrequest\",value:function fetchUserByLoginrequest(loginRequest){return axios.post(USER_API_BASE_URL+'/login',loginRequest);}//get address\n//retrun address object\n},{key:\"getUserAddress\",value:function getUserAddress(user_id){return axios.get(USER_API_BASE_URL+'/address/'+user_id);}//Change address\n//retrun successfully msg\n},{key:\"editUserAddress\",value:function editUserAddress(userId,address){return axios.put(USER_API_BASE_URL+'/address/'+userId,address);}//get all product by search from DB\n//return list of product which match with searchName\n},{key:\"fetchProductsById\",value:function fetchProductsById(productId){return axios.get(USER_API_BASE_URL+'/product/'+productId);}//get all product by search from DB\n//return list of product which match with searchName\n},{key:\"fetchProductsByName\",value:function fetchProductsByName(searchName){return axios.get(USER_API_BASE_URL+'/product/search/'+searchName);}//get all product by category_id randomly from DB\n//return list of products\n},{key:\"fetchProductsByCategoryId\",value:function fetchProductsByCategoryId(categoryId){return axios.get(USER_API_BASE_URL+'/product/list/'+categoryId);}//get all sorted product by category_id from Low to High from DB\n//return list of products\n},{key:\"sortProductsByLowToHigh\",value:function sortProductsByLowToHigh(categoryId){return axios.get(USER_API_BASE_URL+'/product/lowtohigh/'+categoryId);}//get all sorted product by category_id from High to Loq from DB\n//return list of products\n},{key:\"sortProductsByHighToLow\",value:function sortProductsByHighToLow(categoryId){return axios.get(USER_API_BASE_URL+'/product/hightolow/'+categoryId);}},{key:\"addProductToCart\",value:function addProductToCart(cart){return axios.post(USER_API_BASE_URL+'/cart',cart);}},{key:\"getCartByUserId\",value:function getCartByUserId(userId){return axios.get(USER_API_BASE_URL+'/cart/'+userId);}},{key:\"deleteCartByUserId\",value:function deleteCartByUserId(cartId){return axios.delete(USER_API_BASE_URL+'/cart/'+cartId);}},{key:\"getTAmtUserId\",value:function getTAmtUserId(userId){return axios.get(USER_API_BASE_URL+'/cart/tamt/'+userId);}},{key:\"getSAmtByUserId\",value:function getSAmtByUserId(userId){return axios.get(USER_API_BASE_URL+'/cart/samt/'+userId);}//on payment\n//orders : customer_id/user_id, product_name, delivery_boy_id/user_id, order_delivery_status = pending, total_price, order_date, delivery_date = null\n//return the orders id which required in order_details\n},{key:\"addorders\",value:function addorders(totalPrice,userId){return axios.get(USER_API_BASE_URL+'/orders/'+userId+'/'+totalPrice);}//get all order_history from DB by user_id\n//return list of orders which match with user_id\n},{key:\"fetchOrdersList\",value:function fetchOrdersList(user_id){return axios.get(USER_API_BASE_URL+'/orders/'+user_id);}},{key:\"fetchOrdersdetails\",value:function fetchOrdersdetails(orderId){return axios.get(USER_API_BASE_URL+'/orderdetailslist/'+orderId);}//on payment\n//order_details : customer_id/user_id, product_name, final_price, qty, grams, order_id\n//Array of order_details\n},{key:\"addDetails\",value:function addDetails(userId,OrderId){return axios.get(USER_API_BASE_URL+'/orderdetails/'+userId+'/'+OrderId);}//on payment\n//payment : payment_type, payment_date = now() = auto on SERVER side, payment status = paid, customer_id/user_id, order_id\n//Array of order_details\n},{key:\"addpaymentDetails\",value:function addpaymentDetails(payment){return axios.post(USER_API_BASE_URL+'/payment',payment);}},{key:\"updateCartUserId\",value:function updateCartUserId(userId){return axios.get(USER_API_BASE_URL+'/cartupdate/'+userId);}},{key:\"fetchOrdersListDeliveryBoy\",value:function fetchOrdersListDeliveryBoy(delivery_boy_id){return axios.get(USER_API_BASE_URL+'/ordersfoedb/'+delivery_boy_id);}},{key:\"deliveredOrder\",value:function deliveredOrder(orderId){return axios.get(USER_API_BASE_URL+'/deliveredorder/'+orderId);}},{key:\"fetchOrdersListAdmin\",value:function fetchOrdersListAdmin(){return axios.get(USER_API_BASE_URL+'/orderslist/');}},{key:\"fetchSupplierList\",value:function fetchSupplierList(){return axios.get(USER_API_BASE_URL+'/supplierlist/');}},{key:\"fetchDeliveryBoyList\",value:function fetchDeliveryBoyList(){return axios.get(USER_API_BASE_URL+'/deliveryboylist/');}},{key:\"getCustomerAddressDetails\",value:function getCustomerAddressDetails(orderId){return axios.get(USER_API_BASE_URL+'/addressdetails/'+orderId);}},{key:\"fetchAllCategory\",value:function fetchAllCategory(){return axios.get(USER_API_BASE_URL+'/categorylist/');}},{key:\"fetchProductsForHomePage\",value:function fetchProductsForHomePage(){return axios.get(USER_API_BASE_URL+'/homeproductlist/');}},{key:\"addOrderAddress\",value:function addOrderAddress(address){return axios.post(USER_API_BASE_URL+'/orderaddress/',address);}},{key:\"getOrderAddress\",value:function getOrderAddress(orderId){return axios.get(USER_API_BASE_URL+'/orderaddress/'+orderId);}},{key:\"addOrderIdtoOrderAddress\",value:function addOrderIdtoOrderAddress(addressId,orderId){return axios.get(USER_API_BASE_URL+'/orderaddress1/'+addressId+'/'+orderId);}},{key:\"getUserDetails\",value:function getUserDetails(customerId){return axios.get(USER_API_BASE_URL+'/getuser/'+customerId);}}]);return ApiCustomerService;}();export default new ApiCustomerService();","map":{"version":3,"sources":["C:/Users/ombal/Desktop/project/anykart/AnyKart/app/src/services/customer/ApiCustomerService.js"],"names":["axios","USER_API_BASE_URL","ApiCustomerService","user","post","categoryName","put","userId","delete","id","user_id","pwd","loginRequest","get","address","productId","searchName","categoryId","cart","cartId","totalPrice","orderId","OrderId","payment","delivery_boy_id","addressId","customerId"],"mappings":"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","sourcesContent":["import axios from 'axios';\r\n\r\nconst USER_API_BASE_URL = 'http://localhost:7171/customers';\r\n\r\nclass ApiCustomerService {\r\n    //user == customer\r\n\r\n    //Create Account\r\n    //return Successfully msg\r\n    addUser(user) {\r\n        return axios.post(USER_API_BASE_URL + '/signup/', user);\r\n    }\r\n\r\n    addSupplier(categoryName, user) {\r\n        return axios.put(USER_API_BASE_URL + '/signup/'+categoryName, user);\r\n    }\r\n\r\n    \r\n    deleteSupplier(userId){\r\n        return axios.delete(USER_API_BASE_URL +'/'+ userId);\r\n    }\r\n\r\n    deleteDelBoy(userId){\r\n        return axios.delete(USER_API_BASE_URL +'/delBoy/'+ userId);\r\n    }\r\n    //Edit Profile\r\n    //return user object\r\n    editUser(user) {\r\n        return axios.put(USER_API_BASE_URL + '/edit-profile/' + user.id, user);\r\n    }\r\n\r\n    //Change password\r\n    //retrun successfully msg\r\n    editUserPassword(user_id, pwd) {\r\n        return axios.put(USER_API_BASE_URL + '/change_pwd/' + user_id + '/'+pwd);\r\n    }\r\n\r\n    //Authenticate user\r\n    //return user object\r\n    fetchUserByLoginrequest(loginRequest) {\r\n        return axios.post(USER_API_BASE_URL + '/login', loginRequest);\r\n    }\r\n\r\n    //get address\r\n    //retrun address object\r\n    getUserAddress(user_id) {\r\n        return axios.get(USER_API_BASE_URL + '/address/' + user_id);\r\n    }\r\n\r\n    //Change address\r\n    //retrun successfully msg\r\n    editUserAddress(userId, address) {\r\n        return axios.put(USER_API_BASE_URL + '/address/' + userId, address);\r\n    }\r\n\r\n    //get all product by search from DB\r\n    //return list of product which match with searchName\r\n    fetchProductsById(productId) {\r\n        return axios.get(USER_API_BASE_URL + '/product/' + productId);\r\n    }\r\n\r\n    //get all product by search from DB\r\n    //return list of product which match with searchName\r\n    fetchProductsByName(searchName) {\r\n        return axios.get(USER_API_BASE_URL + '/product/search/' + searchName);\r\n    }\r\n\r\n\r\n    //get all product by category_id randomly from DB\r\n    //return list of products\r\n    fetchProductsByCategoryId(categoryId) {\r\n        return axios.get(USER_API_BASE_URL + '/product/list/' + categoryId);\r\n    }\r\n    \r\n    //get all sorted product by category_id from Low to High from DB\r\n    //return list of products\r\n    sortProductsByLowToHigh(categoryId) {\r\n        return axios.get(USER_API_BASE_URL + '/product/lowtohigh/' + categoryId);\r\n    }\r\n\r\n    //get all sorted product by category_id from High to Loq from DB\r\n    //return list of products\r\n    sortProductsByHighToLow(categoryId) {\r\n        return axios.get(USER_API_BASE_URL + '/product/hightolow/' + categoryId);\r\n    }\r\n\r\n    addProductToCart(cart){ \r\n        return axios.post(USER_API_BASE_URL + '/cart', cart);\r\n    }\r\n\r\n    getCartByUserId(userId){\r\n        return axios.get(USER_API_BASE_URL + '/cart/'+ userId);\r\n    }\r\n\r\n    deleteCartByUserId(cartId){\r\n        return axios.delete(USER_API_BASE_URL + '/cart/'+ cartId);\r\n    }\r\n\r\n    getTAmtUserId(userId){\r\n        return axios.get(USER_API_BASE_URL + '/cart/tamt/'+ userId);\r\n    }\r\n\r\n    getSAmtByUserId(userId){\r\n        return axios.get(USER_API_BASE_URL + '/cart/samt/'+ userId);\r\n    }\r\n\r\n    //on payment\r\n    //orders : customer_id/user_id, product_name, delivery_boy_id/user_id, order_delivery_status = pending, total_price, order_date, delivery_date = null\r\n    //return the orders id which required in order_details\r\n    addorders(totalPrice, userId) {\r\n        return axios.get(USER_API_BASE_URL+'/orders/'+userId+'/'+totalPrice);\r\n    }\r\n    \r\n    //get all order_history from DB by user_id\r\n    //return list of orders which match with user_id\r\n    fetchOrdersList(user_id) {\r\n        return axios.get(USER_API_BASE_URL + '/orders/' + user_id);\r\n    }\r\n\r\n    fetchOrdersdetails(orderId) {\r\n        return axios.get(USER_API_BASE_URL + '/orderdetailslist/' + orderId);\r\n    }\r\n\r\n    //on payment\r\n    //order_details : customer_id/user_id, product_name, final_price, qty, grams, order_id\r\n    //Array of order_details\r\n    addDetails(userId, OrderId) {\r\n        return axios.get( USER_API_BASE_URL + '/orderdetails/'+ userId + '/'+ OrderId);\r\n    }\r\n\r\n    //on payment\r\n    //payment : payment_type, payment_date = now() = auto on SERVER side, payment status = paid, customer_id/user_id, order_id\r\n    //Array of order_details\r\n    addpaymentDetails(payment) {\r\n        return axios.post(USER_API_BASE_URL+'/payment', payment);\r\n    }  \r\n\r\n    updateCartUserId(userId){\r\n        return axios.get( USER_API_BASE_URL + '/cartupdate/'+ userId);\r\n    }\r\n\r\n    fetchOrdersListDeliveryBoy(delivery_boy_id) {\r\n        return axios.get(USER_API_BASE_URL + '/ordersfoedb/' + delivery_boy_id);\r\n    }\r\n\r\n    deliveredOrder(orderId){\r\n        return axios.get(USER_API_BASE_URL + '/deliveredorder/' + orderId);\r\n    }\r\n\r\n    fetchOrdersListAdmin() {\r\n        return axios.get(USER_API_BASE_URL + '/orderslist/');\r\n    }\r\n\r\n    fetchSupplierList(){\r\n        return axios.get(USER_API_BASE_URL + '/supplierlist/');\r\n    }\r\n    \r\n    fetchDeliveryBoyList(){\r\n        return axios.get(USER_API_BASE_URL + '/deliveryboylist/');\r\n    }\r\n\r\n    getCustomerAddressDetails(orderId){\r\n        return axios.get(USER_API_BASE_URL + '/addressdetails/'+orderId);\r\n    }\r\n\r\n    fetchAllCategory(){\r\n        return axios.get(USER_API_BASE_URL + '/categorylist/');\r\n    }\r\n\r\n    fetchProductsForHomePage(){\r\n        return axios.get(USER_API_BASE_URL + '/homeproductlist/');\r\n    }\r\n\r\n    addOrderAddress(address){\r\n        return axios.post(USER_API_BASE_URL+'/orderaddress/', address);\r\n    }\r\n\r\n    getOrderAddress(orderId) {\r\n        return axios.get(USER_API_BASE_URL + '/orderaddress/' + orderId);\r\n    }\r\n\r\n    addOrderIdtoOrderAddress(addressId, orderId){\r\n        return axios.get(USER_API_BASE_URL + '/orderaddress1/' + addressId+'/'+orderId);\r\n    }\r\n\r\n    getUserDetails(customerId){\r\n        return axios.get(USER_API_BASE_URL + '/getuser/' + customerId);\r\n    }\r\n}\r\n\r\nexport default new ApiCustomerService();"]},"metadata":{},"sourceType":"module"}