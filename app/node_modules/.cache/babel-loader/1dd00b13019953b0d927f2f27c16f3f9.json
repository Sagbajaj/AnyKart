{"ast":null,"code":"import _classCallCheck from\"C:/Users/ombal/Desktop/project/anykart/AnyKart/app/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";import _createClass from\"C:/Users/ombal/Desktop/project/anykart/AnyKart/app/node_modules/@babel/runtime/helpers/esm/createClass.js\";import axios from'axios';var USER_API_BASE_URL='http://localhost:7171/supplier';var ApiSupplierService=/*#__PURE__*/function(){function ApiSupplierService(){_classCallCheck(this,ApiSupplierService);}_createClass(ApiSupplierService,[{key:\"fetchProductsBySupplierId\",value://user == supplier\n//get all product by category_id randomly from DB\n//return list of products\nfunction fetchProductsBySupplierId(supplierId){return axios.get(USER_API_BASE_URL+'/showproducts/'+supplierId);}},{key:\"addProduct\",value:function addProduct(CategoryName,product){return axios.put(USER_API_BASE_URL+'/addproduct/'+CategoryName,product);}},{key:\"addProductBySupplier\",value:function addProductBySupplier(CategoryName,product){return axios.put(USER_API_BASE_URL+'/addproductbysupplier/'+CategoryName,product);}//get all product by search from DB\n//return list of product which match with searchName\n},{key:\"fetchProductsById\",value:function fetchProductsById(productId){return axios.get(USER_API_BASE_URL+'/product/'+productId);}//Edit Profile\n//return user object\n},{key:\"updateProduct\",value:function updateProduct(product){return axios.put(USER_API_BASE_URL+'/updateproduct/'+product.id,product);}},{key:\"deleteProduct\",value:function deleteProduct(productId){return axios.delete(USER_API_BASE_URL+'/product/'+productId);}},{key:\"fetchProductCategoryName\",value:function fetchProductCategoryName(supplierId){return axios.get(USER_API_BASE_URL+'/productcategoryname/'+supplierId);}},{key:\"fetchSuppliedProducts\",value:function fetchSuppliedProducts(supplierId){return axios.get(USER_API_BASE_URL+'/suppliedproducts/'+supplierId);}},{key:\"deleteFromSuppliedProducts\",value:function deleteFromSuppliedProducts(productId){return axios.delete(USER_API_BASE_URL+'/suppliedproducts/'+productId);}},{key:\"addAddress\",value:function addAddress(supplierId,address){return axios.put(USER_API_BASE_URL+'/address/'+supplierId,address);}}]);return ApiSupplierService;}();export default new ApiSupplierService();","map":{"version":3,"sources":["C:/Users/ombal/Desktop/project/anykart/AnyKart/app/src/services/supplier/ApiSupplierService.js"],"names":["axios","USER_API_BASE_URL","ApiSupplierService","supplierId","get","CategoryName","product","put","productId","id","delete","address"],"mappings":"8QAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CAEA,GAAMC,CAAAA,iBAAiB,CAAG,gCAA1B,C,GAEMC,CAAAA,kB,yKACF;AAEA;AACA;AACA,mCAA0BC,UAA1B,CAAsC,CAClC,MAAOH,CAAAA,KAAK,CAACI,GAAN,CAAUH,iBAAiB,CAAG,gBAApB,CAAuCE,UAAjD,CAAP,CACH,C,0BAED,oBAAWE,YAAX,CAAyBC,OAAzB,CAAkC,CAC9B,MAAON,CAAAA,KAAK,CAACO,GAAN,CAAUN,iBAAiB,CAAG,cAApB,CAAmCI,YAA7C,CAA2DC,OAA3D,CAAP,CACH,C,oCAED,8BAAqBD,YAArB,CAAmCC,OAAnC,CAA4C,CACxC,MAAON,CAAAA,KAAK,CAACO,GAAN,CAAUN,iBAAiB,CAAG,wBAApB,CAA6CI,YAAvD,CAAqEC,OAArE,CAAP,CACH,CACD;AACA;iCACA,2BAAkBE,SAAlB,CAA6B,CACzB,MAAOR,CAAAA,KAAK,CAACI,GAAN,CAAUH,iBAAiB,CAAG,WAApB,CAAkCO,SAA5C,CAAP,CACH,CAED;AACA;6BACA,uBAAcF,OAAd,CAAuB,CACnB,MAAON,CAAAA,KAAK,CAACO,GAAN,CAAUN,iBAAiB,CAAG,iBAApB,CAAwCK,OAAO,CAACG,EAA1D,CAA8DH,OAA9D,CAAP,CACH,C,6BAED,uBAAcE,SAAd,CAAwB,CACpB,MAAOR,CAAAA,KAAK,CAACU,MAAN,CAAaT,iBAAiB,CAAG,WAApB,CAAiCO,SAA9C,CAAP,CACH,C,wCAED,kCAAyBL,UAAzB,CAAoC,CAChC,MAAOH,CAAAA,KAAK,CAACI,GAAN,CAAUH,iBAAiB,CAAG,uBAApB,CAA8CE,UAAxD,CAAP,CACH,C,qCAED,+BAAsBA,UAAtB,CAAiC,CAC7B,MAAOH,CAAAA,KAAK,CAACI,GAAN,CAAUH,iBAAiB,CAAG,oBAApB,CAA2CE,UAArD,CAAP,CACH,C,0CAED,oCAA2BK,SAA3B,CAAqC,CACjC,MAAOR,CAAAA,KAAK,CAACU,MAAN,CAAaT,iBAAiB,CAAG,oBAApB,CAA0CO,SAAvD,CAAP,CACH,C,0BAED,oBAAWL,UAAX,CAAuBQ,OAAvB,CAAgC,CAC5B,MAAOX,CAAAA,KAAK,CAACO,GAAN,CAAUN,iBAAiB,CAAG,WAApB,CAAkCE,UAA5C,CAAyDQ,OAAzD,CAAP,CACH,C,kCAGL,cAAe,IAAIT,CAAAA,kBAAJ,EAAf","sourcesContent":["import axios from 'axios';\r\n\r\nconst USER_API_BASE_URL = 'http://localhost:7171/supplier';\r\n\r\nclass ApiSupplierService {\r\n    //user == supplier\r\n\r\n    //get all product by category_id randomly from DB\r\n    //return list of products\r\n    fetchProductsBySupplierId(supplierId) {\r\n        return axios.get(USER_API_BASE_URL + '/showproducts/' + supplierId);\r\n    }\r\n\r\n    addProduct(CategoryName, product) {\r\n        return axios.put(USER_API_BASE_URL + '/addproduct/'+CategoryName, product);\r\n    }\r\n     \r\n    addProductBySupplier(CategoryName, product) {\r\n        return axios.put(USER_API_BASE_URL + '/addproductbysupplier/'+CategoryName, product);\r\n    }\r\n    //get all product by search from DB\r\n    //return list of product which match with searchName\r\n    fetchProductsById(productId) {\r\n        return axios.get(USER_API_BASE_URL + '/product/' + productId);\r\n    }\r\n\r\n    //Edit Profile\r\n    //return user object\r\n    updateProduct(product) {\r\n        return axios.put(USER_API_BASE_URL + '/updateproduct/' + product.id, product);\r\n    }\r\n\r\n    deleteProduct(productId){\r\n        return axios.delete(USER_API_BASE_URL + '/product/'+ productId);\r\n    }\r\n\r\n    fetchProductCategoryName(supplierId){\r\n        return axios.get(USER_API_BASE_URL + '/productcategoryname/' + supplierId);\r\n    }\r\n\r\n    fetchSuppliedProducts(supplierId){\r\n        return axios.get(USER_API_BASE_URL + '/suppliedproducts/' + supplierId)\r\n    }\r\n\r\n    deleteFromSuppliedProducts(productId){\r\n        return axios.delete(USER_API_BASE_URL + '/suppliedproducts/'+ productId);\r\n    }\r\n\r\n    addAddress(supplierId, address) {\r\n        return axios.put(USER_API_BASE_URL + '/address/' + supplierId , address);\r\n    }\r\n}\r\n\r\nexport default new ApiSupplierService();"]},"metadata":{},"sourceType":"module"}