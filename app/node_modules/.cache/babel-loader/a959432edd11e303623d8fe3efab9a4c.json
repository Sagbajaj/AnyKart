{"ast":null,"code":"import axios from 'axios';\nconst USER_API_BASE_URL = 'http://localhost:7171/customers';\n\nclass ApiCustomerService {\n  //user == customer\n  //Create Account\n  //return Successfully msg\n  addUser(user) {\n    return axios.post(USER_API_BASE_URL + '/signup/', user);\n  }\n\n  addSupplier(categoryName, user) {\n    return axios.put(USER_API_BASE_URL + '/signup/' + categoryName, user);\n  }\n\n  deleteSupplier(userId) {\n    return axios.delete(USER_API_BASE_URL + '/' + userId);\n  }\n\n  deleteDelBoy(userId) {\n    return axios.delete(USER_API_BASE_URL + '/delBoy/' + userId);\n  } //Edit Profile\n  //return user object\n\n\n  editUser(user) {\n    return axios.put(USER_API_BASE_URL + '/edit-profile/' + user.id, user);\n  } //Change password\n  //retrun successfully msg\n\n\n  editUserPassword(user_id, pwd) {\n    return axios.put(USER_API_BASE_URL + '/change_pwd/' + user_id + '/' + pwd);\n  } //Authenticate user\n  //return user object\n\n\n  fetchUserByLoginrequest(loginRequest) {\n    return axios.post(USER_API_BASE_URL + '/login', loginRequest);\n  } //get address\n  //retrun address object\n\n\n  getUserAddress(user_id) {\n    return axios.get(USER_API_BASE_URL + '/address/' + user_id);\n  } //Change address\n  //retrun successfully msg\n\n\n  editUserAddress(userId, address) {\n    return axios.put(USER_API_BASE_URL + '/address/' + userId, address);\n  } //get all product by search from DB\n  //return list of product which match with searchName\n\n\n  fetchProductsById(productId) {\n    return axios.get(USER_API_BASE_URL + '/product/' + productId);\n  } //get all product by search from DB\n  //return list of product which match with searchName\n\n\n  fetchProductsByName(searchName) {\n    return axios.get(USER_API_BASE_URL + '/product/search/' + searchName);\n  } //get all product by category_id randomly from DB\n  //return list of products\n\n\n  fetchProductsByCategoryId(categoryId) {\n    return axios.get(USER_API_BASE_URL + '/product/list/' + categoryId);\n  } //get all sorted product by category_id from Low to High from DB\n  //return list of products\n\n\n  sortProductsByLowToHigh(categoryId) {\n    return axios.get(USER_API_BASE_URL + '/product/lowtohigh/' + categoryId);\n  } //get all sorted product by category_id from High to Loq from DB\n  //return list of products\n\n\n  sortProductsByHighToLow(categoryId) {\n    return axios.get(USER_API_BASE_URL + '/product/hightolow/' + categoryId);\n  }\n\n  addProductToCart(cart) {\n    return axios.post(USER_API_BASE_URL + '/cart', cart);\n  }\n\n  getCartByUserId(userId) {\n    return axios.get(USER_API_BASE_URL + '/cart/' + userId);\n  }\n\n  deleteCartByUserId(cartId) {\n    return axios.delete(USER_API_BASE_URL + '/cart/' + cartId);\n  }\n\n  getTAmtUserId(userId) {\n    return axios.get(USER_API_BASE_URL + '/cart/tamt/' + userId);\n  }\n\n  getSAmtByUserId(userId) {\n    return axios.get(USER_API_BASE_URL + '/cart/samt/' + userId);\n  } //on payment\n  //orders : customer_id/user_id, product_name, delivery_boy_id/user_id, order_delivery_status = pending, total_price, order_date, delivery_date = null\n  //return the orders id which required in order_details\n\n\n  addorders(totalPrice, userId) {\n    return axios.get(USER_API_BASE_URL + '/orders/' + userId + '/' + totalPrice);\n  } //get all order_history from DB by user_id\n  //return list of orders which match with user_id\n\n\n  fetchOrdersList(user_id) {\n    return axios.get(USER_API_BASE_URL + '/orders/' + user_id);\n  }\n\n  fetchOrdersdetails(orderId) {\n    return axios.get(USER_API_BASE_URL + '/orderdetailslist/' + orderId);\n  } //on payment\n  //order_details : customer_id/user_id, product_name, final_price, qty, grams, order_id\n  //Array of order_details\n\n\n  addDetails(userId, OrderId) {\n    return axios.get(USER_API_BASE_URL + '/orderdetails/' + userId + '/' + OrderId);\n  } //on payment\n  //payment : payment_type, payment_date = now() = auto on SERVER side, payment status = paid, customer_id/user_id, order_id\n  //Array of order_details\n\n\n  addpaymentDetails(payment) {\n    return axios.post(USER_API_BASE_URL + '/payment', payment);\n  }\n\n  updateCartUserId(userId) {\n    return axios.get(USER_API_BASE_URL + '/cartupdate/' + userId);\n  }\n\n  fetchOrdersListDeliveryBoy(delivery_boy_id) {\n    return axios.get(USER_API_BASE_URL + '/ordersfoedb/' + delivery_boy_id);\n  }\n\n  deliveredOrder(orderId) {\n    return axios.get(USER_API_BASE_URL + '/deliveredorder/' + orderId);\n  }\n\n  fetchOrdersListAdmin() {\n    return axios.get(USER_API_BASE_URL + '/orderslist/');\n  }\n\n  fetchSupplierList() {\n    return axios.get(USER_API_BASE_URL + '/supplierlist/');\n  }\n\n  fetchDeliveryBoyList() {\n    return axios.get(USER_API_BASE_URL + '/deliveryboylist/');\n  }\n\n  getCustomerAddressDetails(orderId) {\n    return axios.get(USER_API_BASE_URL + '/addressdetails/' + orderId);\n  }\n\n  fetchAllCategory() {\n    return axios.get(USER_API_BASE_URL + '/categorylist/');\n  }\n\n  fetchProductsForHomePage() {\n    return axios.get(USER_API_BASE_URL + '/homeproductlist/');\n  }\n\n  addOrderAddress(address) {\n    return axios.post(USER_API_BASE_URL + '/orderaddress/', address);\n  }\n\n  getOrderAddress(orderId) {\n    return axios.get(USER_API_BASE_URL + '/orderaddress/' + orderId);\n  }\n\n  addOrderIdtoOrderAddress(addressId, orderId) {\n    return axios.get(USER_API_BASE_URL + '/orderaddress1/' + addressId + '/' + orderId);\n  }\n\n  getUserDetails(customerId) {\n    return axios.get(USER_API_BASE_URL + '/getuser/' + customerId);\n  }\n\n  getCountForAdmin() {\n    return axios.post(USER_API_BASE_URL + '/getcount/');\n  }\n\n}\n\nexport default new ApiCustomerService();","map":{"version":3,"sources":["C:/Users/ombal/Desktop/project/anykart/AnyKart/app/src/services/customer/ApiCustomerService.js"],"names":["axios","USER_API_BASE_URL","ApiCustomerService","addUser","user","post","addSupplier","categoryName","put","deleteSupplier","userId","delete","deleteDelBoy","editUser","id","editUserPassword","user_id","pwd","fetchUserByLoginrequest","loginRequest","getUserAddress","get","editUserAddress","address","fetchProductsById","productId","fetchProductsByName","searchName","fetchProductsByCategoryId","categoryId","sortProductsByLowToHigh","sortProductsByHighToLow","addProductToCart","cart","getCartByUserId","deleteCartByUserId","cartId","getTAmtUserId","getSAmtByUserId","addorders","totalPrice","fetchOrdersList","fetchOrdersdetails","orderId","addDetails","OrderId","addpaymentDetails","payment","updateCartUserId","fetchOrdersListDeliveryBoy","delivery_boy_id","deliveredOrder","fetchOrdersListAdmin","fetchSupplierList","fetchDeliveryBoyList","getCustomerAddressDetails","fetchAllCategory","fetchProductsForHomePage","addOrderAddress","getOrderAddress","addOrderIdtoOrderAddress","addressId","getUserDetails","customerId","getCountForAdmin"],"mappings":"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","sourcesContent":["import axios from 'axios';\r\n\r\nconst USER_API_BASE_URL = 'http://localhost:7171/customers';\r\n\r\nclass ApiCustomerService {\r\n    //user == customer\r\n\r\n    //Create Account\r\n    //return Successfully msg\r\n    addUser(user) {\r\n        return axios.post(USER_API_BASE_URL + '/signup/', user);\r\n    }\r\n\r\n    addSupplier(categoryName, user) {\r\n        return axios.put(USER_API_BASE_URL + '/signup/'+categoryName, user);\r\n    }\r\n\r\n    \r\n    deleteSupplier(userId){\r\n        return axios.delete(USER_API_BASE_URL +'/'+ userId);\r\n    }\r\n\r\n    deleteDelBoy(userId){\r\n        return axios.delete(USER_API_BASE_URL +'/delBoy/'+ userId);\r\n    }\r\n    //Edit Profile\r\n    //return user object\r\n    editUser(user) {\r\n        return axios.put(USER_API_BASE_URL + '/edit-profile/' + user.id, user);\r\n    }\r\n\r\n    //Change password\r\n    //retrun successfully msg\r\n    editUserPassword(user_id, pwd) {\r\n        return axios.put(USER_API_BASE_URL + '/change_pwd/' + user_id + '/'+pwd);\r\n    }\r\n\r\n    //Authenticate user\r\n    //return user object\r\n    fetchUserByLoginrequest(loginRequest) {\r\n        return axios.post(USER_API_BASE_URL + '/login', loginRequest);\r\n    }\r\n\r\n    //get address\r\n    //retrun address object\r\n    getUserAddress(user_id) {\r\n        return axios.get(USER_API_BASE_URL + '/address/' + user_id);\r\n    }\r\n\r\n    //Change address\r\n    //retrun successfully msg\r\n    editUserAddress(userId, address) {\r\n        return axios.put(USER_API_BASE_URL + '/address/' + userId, address);\r\n    }\r\n\r\n    //get all product by search from DB\r\n    //return list of product which match with searchName\r\n    fetchProductsById(productId) {\r\n        return axios.get(USER_API_BASE_URL + '/product/' + productId);\r\n    }\r\n\r\n    //get all product by search from DB\r\n    //return list of product which match with searchName\r\n    fetchProductsByName(searchName) {\r\n        return axios.get(USER_API_BASE_URL + '/product/search/' + searchName);\r\n    }\r\n\r\n\r\n    //get all product by category_id randomly from DB\r\n    //return list of products\r\n    fetchProductsByCategoryId(categoryId) {\r\n        return axios.get(USER_API_BASE_URL + '/product/list/' + categoryId);\r\n    }\r\n    \r\n    //get all sorted product by category_id from Low to High from DB\r\n    //return list of products\r\n    sortProductsByLowToHigh(categoryId) {\r\n        return axios.get(USER_API_BASE_URL + '/product/lowtohigh/' + categoryId);\r\n    }\r\n\r\n    //get all sorted product by category_id from High to Loq from DB\r\n    //return list of products\r\n    sortProductsByHighToLow(categoryId) {\r\n        return axios.get(USER_API_BASE_URL + '/product/hightolow/' + categoryId);\r\n    }\r\n\r\n    addProductToCart(cart){ \r\n        return axios.post(USER_API_BASE_URL + '/cart', cart);\r\n    }\r\n\r\n    getCartByUserId(userId){\r\n        return axios.get(USER_API_BASE_URL + '/cart/'+ userId);\r\n    }\r\n\r\n    deleteCartByUserId(cartId){\r\n        return axios.delete(USER_API_BASE_URL + '/cart/'+ cartId);\r\n    }\r\n\r\n    getTAmtUserId(userId){\r\n        return axios.get(USER_API_BASE_URL + '/cart/tamt/'+ userId);\r\n    }\r\n\r\n    getSAmtByUserId(userId){\r\n        return axios.get(USER_API_BASE_URL + '/cart/samt/'+ userId);\r\n    }\r\n\r\n    //on payment\r\n    //orders : customer_id/user_id, product_name, delivery_boy_id/user_id, order_delivery_status = pending, total_price, order_date, delivery_date = null\r\n    //return the orders id which required in order_details\r\n    addorders(totalPrice, userId) {\r\n        return axios.get(USER_API_BASE_URL+'/orders/'+userId+'/'+totalPrice);\r\n    }\r\n    \r\n    //get all order_history from DB by user_id\r\n    //return list of orders which match with user_id\r\n    fetchOrdersList(user_id) {\r\n        return axios.get(USER_API_BASE_URL + '/orders/' + user_id);\r\n    }\r\n\r\n    fetchOrdersdetails(orderId) {\r\n        return axios.get(USER_API_BASE_URL + '/orderdetailslist/' + orderId);\r\n    }\r\n\r\n    //on payment\r\n    //order_details : customer_id/user_id, product_name, final_price, qty, grams, order_id\r\n    //Array of order_details\r\n    addDetails(userId, OrderId) {\r\n        return axios.get( USER_API_BASE_URL + '/orderdetails/'+ userId + '/'+ OrderId);\r\n    }\r\n\r\n    //on payment\r\n    //payment : payment_type, payment_date = now() = auto on SERVER side, payment status = paid, customer_id/user_id, order_id\r\n    //Array of order_details\r\n    addpaymentDetails(payment) {\r\n        return axios.post(USER_API_BASE_URL+'/payment', payment);\r\n    }  \r\n\r\n    updateCartUserId(userId){\r\n        return axios.get( USER_API_BASE_URL + '/cartupdate/'+ userId);\r\n    }\r\n\r\n    fetchOrdersListDeliveryBoy(delivery_boy_id) {\r\n        return axios.get(USER_API_BASE_URL + '/ordersfoedb/' + delivery_boy_id);\r\n    }\r\n\r\n    deliveredOrder(orderId){\r\n        return axios.get(USER_API_BASE_URL + '/deliveredorder/' + orderId);\r\n    }\r\n\r\n    fetchOrdersListAdmin() {\r\n        return axios.get(USER_API_BASE_URL + '/orderslist/');\r\n    }\r\n\r\n    fetchSupplierList(){\r\n        return axios.get(USER_API_BASE_URL + '/supplierlist/');\r\n    }\r\n    \r\n    fetchDeliveryBoyList(){\r\n        return axios.get(USER_API_BASE_URL + '/deliveryboylist/');\r\n    }\r\n\r\n    getCustomerAddressDetails(orderId){\r\n        return axios.get(USER_API_BASE_URL + '/addressdetails/'+orderId);\r\n    }\r\n\r\n    fetchAllCategory(){\r\n        return axios.get(USER_API_BASE_URL + '/categorylist/');\r\n    }\r\n\r\n    fetchProductsForHomePage(){\r\n        return axios.get(USER_API_BASE_URL + '/homeproductlist/');\r\n    }\r\n\r\n    addOrderAddress(address){\r\n        return axios.post(USER_API_BASE_URL+'/orderaddress/', address);\r\n    }\r\n\r\n    getOrderAddress(orderId) {\r\n        return axios.get(USER_API_BASE_URL + '/orderaddress/' + orderId);\r\n    }\r\n\r\n    addOrderIdtoOrderAddress(addressId, orderId){\r\n        return axios.get(USER_API_BASE_URL + '/orderaddress1/' + addressId+'/'+orderId);\r\n    }\r\n\r\n    getUserDetails(customerId){\r\n        return axios.get(USER_API_BASE_URL + '/getuser/' + customerId);\r\n    }\r\n\r\n    getCountForAdmin(){\r\n        return axios.post(USER_API_BASE_URL + '/getcount/');\r\n    }\r\n}\r\n\r\nexport default new ApiCustomerService();"]},"metadata":{},"sourceType":"module"}