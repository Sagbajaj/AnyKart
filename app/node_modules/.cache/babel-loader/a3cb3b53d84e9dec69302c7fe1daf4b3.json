{"ast":null,"code":"var _jsxFileName = \"D:\\\\Project\\\\EKart\\\\AnyKart\\\\app\\\\src\\\\screens\\\\customer\\\\CreateAccountScreen.js\";\n// import \"../../App.css\"\n// import Header from \"../../components/Header\"\n// import {Link} from 'react-router-dom'\n// import Navigation from \"../../components/Navigation\";\n// import Footer from \"../../components/Footer\";\n// import ApiCustomerService from \"../../services/customer/ApiCustomerService\";\n// import React, { Component } from 'react'\n// import Swal from \"sweetalert2\";\n// const validEmailRegex = RegExp(\n//   /^(([^<>()\\[\\]\\.,;:\\s@\\\"]+(\\.[^<>()\\[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$/i\n// );\n// const validateForm = errors => {\n//   let valid = true;\n//   Object.values(errors).forEach(val => val.length > 0 && (valid = false));\n//   return valid;\n// };\n// class CreateAccountScreen extends Component {\n//   constructor(props) {\n//     super(props)\n//     this.state ={\n//       firstName: '',\n//       lastName: '',\n//       email: '',\n//       password: '',\n//       phone: '',\n//       role:'CUSTOMER',\n//       message: '',\n//       errors: {\n//         firstName: '',\n//         lastName : '',\n//         email: '',\n//         password: '',\n//       }\n//   }\n//     this.registerUser = this.registerUser.bind(this);\n// }\n// handleChange = (event) => {\n//   event.preventDefault();\n//   const { name, value } = event.target;\n//   let errors = this.state.errors;\n//   switch (name) {\n//     case 'firstName': \n//       errors.firstName = \n//         value.length < 5\n//           ? 'First Name must be at least 5 characters long!'\n//           : '';\n//       break;\n//       case 'LastName': \n//       errors.lastName = \n//         value.length < 5\n//           ? 'Last Name must be at least 5 characters long!'\n//           : '';\n//       break;\n//     case 'email': \n//       errors.email = \n//         validEmailRegex.test(value)\n//           ? ''\n//           : 'Email is not valid!';\n//       break;\n//     case 'password': \n//       errors.password = \n//         value.length < 8\n//           ? 'Password must be at least 8 characters long!'\n//           : '';\n//       break;\n//     default:\n//       break;\n//   }\n//   this.setState({errors, [name]: value});\n//   }\n//   handleSubmit = (event) => {\n//     event.preventDefault();\n//     if(validateForm(this.state.errors)) {\n//       console.info('Valid Form')\n//     }else{\n//       console.error('Invalid Form')\n//     }\n//   }\n// onChange = (e) =>\n//         this.setState({ [e.target.name]: e.target.value });\n//     registerUser = (e) => {\n//       e.preventDefault();\n//       let user = {firstName: this.state.firstName, lastName: this.state.lastName, email: this.state.email, password: this.state.password, phone: this.state.phone, role: this.state.role};\n//       ApiCustomerService.addUser(user)\n//           .then(res => {\n//             if(res.data.result === null){\n//             //  alert(\"Email Addreess Already Registered\")\n//               Swal.fire({\n//                 icon: 'success',\n//                 title: 'Email Address Already Registered',\n//                 showConfirmButton: true,\n//                 confirmButtonText: 'OKAY',\n//               })\n//             }\n//             if(res.data.result !== null){\n//             //  alert(\"SignUp successfully\")\n//               Swal.fire({\n//                 icon: 'success',\n//                 title: 'Email Address Already Registered',\n//                 showConfirmButton: true,\n//                 confirmButtonText: 'OKAY',\n//               })\n//               this.setState({message : 'SignUp successfully.'});\n//               this.props.history.push('/login');\n//             }\n//           });\n//   }\n//   render(){\n//     return (\n//       <div>\n//         <Navigation/>\n//         <div className=\"main\">\n//       <Header title=\"Create Account\" />\n//       <div className=\"form\">\n//       <div className=\"row mb-3\">\n//           <label className=\"col-sm-4 col-form-label\">First Name</label>\n//           <div className=\"col-sm-8\">\n//               <input type=\"text\" className=\"form-control\" name=\"firstName\" value={this.state.firstName} onChange={this.onChange}/>\n//           </div>\n//        </div>\n//        <div className=\"row mb-3\">\n//           <label className=\"col-sm-4 col-form-label\">Last Name</label>\n//           <div className=\"col-sm-8\">\n//               <input type=\"text\" className=\"form-control\" name=\"lastName\" value={this.state.lastName} onChange={this.onChange}/>\n//           </div>\n//        </div>\n//        <div class=\"row mb-3\">\n//           <label className=\"col-sm-4 col-form-label\">Email</label>\n//           <div className=\"col-sm-8\">\n//               <input type=\"email\" className=\"form-control\" name=\"email\" value={this.state.email} onChange={this.onChange}/>\n//           </div>\n//        </div>\n//        <div className=\"row mb-3\">\n//           <label className=\"col-sm-4 col-form-label\">Password</label>\n//           <div className=\"col-sm-8\">\n//               <input type=\"password\" className=\"form-control\" name=\"password\" value={this.state.password} onChange={this.onChange}/>\n//           </div>\n//        </div>\n//        <div className=\"row mb-3\">\n//           <label className=\"col-sm-4 col-form-label\">Phone</label>\n//           <div className=\"col-sm-8\">\n//               <input type=\"text\" className=\"form-control\" name=\"phone\" value={this.state.phone} onChange={this.onChange}/>\n//           </div>\n//        </div>\n//         <div className=\"mb-3\">\n//         <div className=\"float-start\"><br></br>\n//             Existing User? <Link to=\"/login\">Login here</Link>\n//           </div>\n//           <button className=\"btn-hover color-9 float-end\" onClick={this.registerUser}>\n//             Register\n//           </button>\n//           <br></br>\n//         </div>\n//       </div>\n//     </div>\n//       </div>\n//   )\n//   }\n// }\n// export default CreateAccountScreen\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst validEmailRegex = RegExp(/^(([^<>()\\[\\]\\.,;:\\s@\\\"]+(\\.[^<>()\\[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$/i);\n\nconst validateForm = errors => {\n  let valid = true;\n  Object.values(errors).forEach(val => val.length > 0 && (valid = false));\n  return valid;\n};\n\nexport default class CreateAccountScreen extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = event => {\n      event.preventDefault();\n      const {\n        name,\n        value\n      } = event.target;\n      let errors = this.state.errors;\n\n      switch (name) {\n        case 'fullName':\n          errors.fullName = value.length < 5 ? 'Full Name must be at least 5 characters long!' : '';\n          break;\n\n        case 'email':\n          errors.email = validEmailRegex.test(value) ? '' : 'Email is not valid!';\n          break;\n\n        case 'password':\n          errors.password = value.length < 8 ? 'Password must be at least 8 characters long!' : '';\n          break;\n\n        default:\n          break;\n      }\n\n      this.setState({\n        errors,\n        [name]: value\n      });\n    };\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n\n      if (validateForm(this.state.errors)) {\n        console.info('Valid Form');\n      } else {\n        console.error('Invalid Form');\n      }\n    };\n\n    this.state = {\n      fullName: null,\n      email: null,\n      password: null,\n      errors: {\n        fullName: '',\n        email: '',\n        password: ''\n      }\n    };\n  }\n\n  render() {\n    const {\n      errors\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"wrapper\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-wrapper\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Create Account\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: this.handleSubmit,\n          noValidate: true,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"fullName\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"fullName\",\n              children: \"Full Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 252,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"fullName\",\n              onChange: this.handleChange,\n              noValidate: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 253,\n              columnNumber: 15\n            }, this), errors.fullName.length > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"error\",\n              children: errors.fullName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 255,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"email\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"email\",\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 258,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"email\",\n              name: \"email\",\n              onChange: this.handleChange,\n              noValidate: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 259,\n              columnNumber: 15\n            }, this), errors.email.length > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"error\",\n              children: errors.email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 261,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"password\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"password\",\n              children: \"Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 264,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              name: \"password\",\n              onChange: this.handleChange,\n              noValidate: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 265,\n              columnNumber: 15\n            }, this), errors.password.length > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"error\",\n              children: errors.password\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 267,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 263,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"submit\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              children: \"Create\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 270,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 269,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["D:/Project/EKart/AnyKart/app/src/screens/customer/CreateAccountScreen.js"],"names":["React","validEmailRegex","RegExp","validateForm","errors","valid","Object","values","forEach","val","length","CreateAccountScreen","Component","constructor","props","handleChange","event","preventDefault","name","value","target","state","fullName","email","test","password","setState","handleSubmit","console","info","error","render"],"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","sourcesContent":["// import \"../../App.css\"\r\n// import Header from \"../../components/Header\"\r\n// import {Link} from 'react-router-dom'\r\n// import Navigation from \"../../components/Navigation\";\r\n// import Footer from \"../../components/Footer\";\r\n// import ApiCustomerService from \"../../services/customer/ApiCustomerService\";\r\n// import React, { Component } from 'react'\r\n// import Swal from \"sweetalert2\";\r\n// const validEmailRegex = RegExp(\r\n//   /^(([^<>()\\[\\]\\.,;:\\s@\\\"]+(\\.[^<>()\\[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$/i\r\n// );\r\n// const validateForm = errors => {\r\n//   let valid = true;\r\n//   Object.values(errors).forEach(val => val.length > 0 && (valid = false));\r\n//   return valid;\r\n// };\r\n// class CreateAccountScreen extends Component {\r\n\r\n//   constructor(props) {\r\n//     super(props)\r\n//     this.state ={\r\n//       firstName: '',\r\n//       lastName: '',\r\n//       email: '',\r\n//       password: '',\r\n//       phone: '',\r\n//       role:'CUSTOMER',\r\n//       message: '',\r\n//       errors: {\r\n//         firstName: '',\r\n//         lastName : '',\r\n//         email: '',\r\n//         password: '',\r\n//       }\r\n//   }\r\n//     this.registerUser = this.registerUser.bind(this);\r\n   \r\n// }\r\n\r\n// handleChange = (event) => {\r\n//   event.preventDefault();\r\n//   const { name, value } = event.target;\r\n//   let errors = this.state.errors;\r\n\r\n//   switch (name) {\r\n//     case 'firstName': \r\n//       errors.firstName = \r\n//         value.length < 5\r\n//           ? 'First Name must be at least 5 characters long!'\r\n//           : '';\r\n//       break;\r\n//       case 'LastName': \r\n//       errors.lastName = \r\n//         value.length < 5\r\n//           ? 'Last Name must be at least 5 characters long!'\r\n//           : '';\r\n//       break;\r\n//     case 'email': \r\n//       errors.email = \r\n//         validEmailRegex.test(value)\r\n//           ? ''\r\n//           : 'Email is not valid!';\r\n//       break;\r\n//     case 'password': \r\n//       errors.password = \r\n//         value.length < 8\r\n//           ? 'Password must be at least 8 characters long!'\r\n//           : '';\r\n//       break;\r\n//     default:\r\n//       break;\r\n//   }\r\n//   this.setState({errors, [name]: value});\r\n//   }\r\n\r\n//   handleSubmit = (event) => {\r\n//     event.preventDefault();\r\n//     if(validateForm(this.state.errors)) {\r\n//       console.info('Valid Form')\r\n//     }else{\r\n//       console.error('Invalid Form')\r\n//     }\r\n//   }\r\n\r\n// onChange = (e) =>\r\n//         this.setState({ [e.target.name]: e.target.value });\r\n\r\n//     registerUser = (e) => {\r\n//       e.preventDefault();\r\n//       let user = {firstName: this.state.firstName, lastName: this.state.lastName, email: this.state.email, password: this.state.password, phone: this.state.phone, role: this.state.role};\r\n//       ApiCustomerService.addUser(user)\r\n//           .then(res => {\r\n//             if(res.data.result === null){\r\n//             //  alert(\"Email Addreess Already Registered\")\r\n//               Swal.fire({\r\n//                 icon: 'success',\r\n//                 title: 'Email Address Already Registered',\r\n//                 showConfirmButton: true,\r\n//                 confirmButtonText: 'OKAY',\r\n//               })\r\n            \r\n//             }\r\n//             if(res.data.result !== null){\r\n//             //  alert(\"SignUp successfully\")\r\n//               Swal.fire({\r\n//                 icon: 'success',\r\n//                 title: 'Email Address Already Registered',\r\n//                 showConfirmButton: true,\r\n//                 confirmButtonText: 'OKAY',\r\n//               })\r\n//               this.setState({message : 'SignUp successfully.'});\r\n//               this.props.history.push('/login');\r\n//             }\r\n            \r\n//           });\r\n//   }\r\n\r\n//   render(){\r\n//     return (\r\n//       <div>\r\n//         <Navigation/>\r\n//         <div className=\"main\">\r\n//       <Header title=\"Create Account\" />\r\n//       <div className=\"form\">\r\n//       <div className=\"row mb-3\">\r\n//           <label className=\"col-sm-4 col-form-label\">First Name</label>\r\n//           <div className=\"col-sm-8\">\r\n//               <input type=\"text\" className=\"form-control\" name=\"firstName\" value={this.state.firstName} onChange={this.onChange}/>\r\n//           </div>\r\n//        </div>\r\n\r\n//        <div className=\"row mb-3\">\r\n//           <label className=\"col-sm-4 col-form-label\">Last Name</label>\r\n//           <div className=\"col-sm-8\">\r\n//               <input type=\"text\" className=\"form-control\" name=\"lastName\" value={this.state.lastName} onChange={this.onChange}/>\r\n//           </div>\r\n//        </div>\r\n\r\n//        <div class=\"row mb-3\">\r\n//           <label className=\"col-sm-4 col-form-label\">Email</label>\r\n//           <div className=\"col-sm-8\">\r\n//               <input type=\"email\" className=\"form-control\" name=\"email\" value={this.state.email} onChange={this.onChange}/>\r\n//           </div>\r\n//        </div>\r\n\r\n//        <div className=\"row mb-3\">\r\n//           <label className=\"col-sm-4 col-form-label\">Password</label>\r\n//           <div className=\"col-sm-8\">\r\n//               <input type=\"password\" className=\"form-control\" name=\"password\" value={this.state.password} onChange={this.onChange}/>\r\n//           </div>\r\n//        </div>\r\n\r\n//        <div className=\"row mb-3\">\r\n//           <label className=\"col-sm-4 col-form-label\">Phone</label>\r\n//           <div className=\"col-sm-8\">\r\n//               <input type=\"text\" className=\"form-control\" name=\"phone\" value={this.state.phone} onChange={this.onChange}/>\r\n//           </div>\r\n//        </div>\r\n//         <div className=\"mb-3\">\r\n//         <div className=\"float-start\"><br></br>\r\n//             Existing User? <Link to=\"/login\">Login here</Link>\r\n//           </div>\r\n//           <button className=\"btn-hover color-9 float-end\" onClick={this.registerUser}>\r\n//             Register\r\n//           </button>\r\n//           <br></br>\r\n\r\n//         </div>\r\n//       </div>\r\n//     </div>\r\n//       </div>\r\n//   )\r\n//   }\r\n    \r\n// }\r\n// export default CreateAccountScreen\r\n\r\nimport React from 'react';\r\n\r\nconst validEmailRegex = RegExp(\r\n  /^(([^<>()\\[\\]\\.,;:\\s@\\\"]+(\\.[^<>()\\[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$/i\r\n);\r\nconst validateForm = errors => {\r\n  let valid = true;\r\n  Object.values(errors).forEach(val => val.length > 0 && (valid = false));\r\n  return valid;\r\n};\r\n\r\nexport default class CreateAccountScreen extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      fullName: null,\r\n      email: null,\r\n      password: null,\r\n      errors: {\r\n        fullName: '',\r\n        email: '',\r\n        password: '',\r\n      }\r\n    };\r\n  }\r\n\r\n  handleChange = (event) => {\r\n    event.preventDefault();\r\n    const { name, value } = event.target;\r\n    let errors = this.state.errors;\r\n\r\n    switch (name) {\r\n      case 'fullName': \r\n        errors.fullName = \r\n          value.length < 5\r\n            ? 'Full Name must be at least 5 characters long!'\r\n            : '';\r\n        break;\r\n      case 'email': \r\n        errors.email = \r\n          validEmailRegex.test(value)\r\n            ? ''\r\n            : 'Email is not valid!';\r\n        break;\r\n      case 'password': \r\n        errors.password = \r\n          value.length < 8\r\n            ? 'Password must be at least 8 characters long!'\r\n            : '';\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n\r\n    this.setState({errors, [name]: value});\r\n  }\r\n\r\n  handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    if(validateForm(this.state.errors)) {\r\n      console.info('Valid Form')\r\n    }else{\r\n      console.error('Invalid Form')\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const {errors} = this.state;\r\n    return (\r\n      <div className='wrapper'>\r\n        <div className='form-wrapper'>\r\n          <h2>Create Account</h2>\r\n          <form onSubmit={this.handleSubmit} noValidate>\r\n            <div className='fullName'>\r\n              <label htmlFor=\"fullName\">Full Name</label>\r\n              <input type='text' name='fullName' onChange={this.handleChange} noValidate />\r\n              {errors.fullName.length > 0 && \r\n                <span className='error'>{errors.fullName}</span>}\r\n            </div>\r\n            <div className='email'>\r\n              <label htmlFor=\"email\">Email</label>\r\n              <input type='email' name='email' onChange={this.handleChange} noValidate />\r\n              {errors.email.length > 0 && \r\n                <span className='error'>{errors.email}</span>}\r\n            </div>\r\n            <div className='password'>\r\n              <label htmlFor=\"password\">Password</label>\r\n              <input type='password' name='password' onChange={this.handleChange} noValidate />\r\n              {errors.password.length > 0 && \r\n                <span className='error'>{errors.password}</span>}\r\n            </div>\r\n            <div className='submit'>\r\n              <button>Create</button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}